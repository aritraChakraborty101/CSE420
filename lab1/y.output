Terminals unused in grammar

    DO
    BREAK
    CHAR
    DOUBLE
    SWITCH
    CASE
    DEFAULT
    CONTINUE
    GOTO


State 106 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_definition

    6 var_declaration: type_specifier declaration_list SEMICOLON

    7 type_specifier: INT
    8               | FLOAT
    9               | VOID

   10 declaration_list: declaration_list COMMA ID
   11                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   12                 | ID
   13                 | ID LTHIRD CONST_INT RTHIRD

   14 parameter_list: parameter_list COMMA type_specifier ID
   15               | parameter_list COMMA type_specifier
   16               | type_specifier ID
   17               | type_specifier

   18 compound_statement: LCURL statements RCURL
   19                   | LCURL RCURL

   20 statements: statements statement
   21           | statement

   22 expression: logic_expression
   23           | variable ASSIGNOP logic_expression

   24 variable: ID LTHIRD expression RTHIRD
   25         | ID

   26 logic_expression: rel_expression
   27                 | rel_expression LOGICOP rel_expression

   28 rel_expression: simple_expression
   29               | simple_expression RELOP simple_expression

   30 simple_expression: term
   31                  | simple_expression ADDOP term

   32 term: unary_expression
   33     | term MULOP unary_expression

   34 unary_expression: ADDOP unary_expression
   35                 | NOT unary_expression
   36                 | factor

   37 factor: variable
   38       | ID LPAREN argument_list RPAREN
   39       | LPAREN expression RPAREN
   40       | CONST_INT
   41       | CONST_FLOAT
   42       | variable INCOP
   43       | variable DECOP

   44 expression_statement: SEMICOLON
   45                     | expression SEMICOLON

   46 argument_list: arguments
   47              | ε

   48 arguments: arguments COMMA logic_expression
   49          | logic_expression

   50 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
   51                | type_specifier ID LPAREN RPAREN compound_statement

   52 statement: var_declaration
   53          | expression_statement
   54          | compound_statement
   55          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   56          | IF LPAREN expression RPAREN statement
   57          | IF LPAREN expression RPAREN statement ELSE statement
   58          | WHILE LPAREN expression RPAREN statement
   59          | RETURN expression SEMICOLON
   60          | PRINTF LPAREN ID RPAREN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 56 57
    ELSE (259) 57
    FOR (260) 55
    WHILE (261) 58
    DO (262)
    BREAK (263)
    INT (264) 7
    CHAR (265)
    FLOAT (266) 8
    DOUBLE (267)
    VOID (268) 9
    RETURN (269) 59
    SWITCH (270)
    CASE (271)
    DEFAULT (272)
    CONTINUE (273)
    GOTO (274)
    PRINTF (275) 60
    ADDOP (276) 31 34
    INCOP (277) 42
    DECOP (278) 43
    MULOP (279) 33
    RELOP (280) 29
    ASSIGNOP (281) 23
    LOGICOP (282) 27
    NOT (283) 35
    LPAREN (284) 38 39 50 51 55 56 57 58 60
    RPAREN (285) 38 39 50 51 55 56 57 58 60
    LCURL (286) 18 19
    RCURL (287) 18 19
    LTHIRD (288) 11 13 24
    RTHIRD (289) 11 13 24
    SEMICOLON (290) 6 44 45 59 60
    COMMA (291) 10 11 14 15 48
    ID (292) 10 11 12 13 14 16 24 25 38 50 51 60
    CONST_INT (293) 11 13 40
    CONST_FLOAT (294) 41


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    start (41)
        on left: 1
        on right: 0
    program (42)
        on left: 2 3
        on right: 1 2
    unit (43)
        on left: 4 5
        on right: 2 3
    var_declaration (44)
        on left: 6
        on right: 4 52
    type_specifier (45)
        on left: 7 8 9
        on right: 6 14 15 16 17 50 51
    declaration_list (46)
        on left: 10 11 12 13
        on right: 6 10 11
    parameter_list (47)
        on left: 14 15 16 17
        on right: 14 15 50
    compound_statement (48)
        on left: 18 19
        on right: 50 51 54
    statements (49)
        on left: 20 21
        on right: 18 20
    expression (50)
        on left: 22 23
        on right: 24 39 45 55 56 57 58 59
    variable (51)
        on left: 24 25
        on right: 23 37 42 43
    logic_expression (52)
        on left: 26 27
        on right: 22 23 48 49
    rel_expression (53)
        on left: 28 29
        on right: 26 27
    simple_expression (54)
        on left: 30 31
        on right: 28 29 31
    term (55)
        on left: 32 33
        on right: 30 31 33
    unary_expression (56)
        on left: 34 35 36
        on right: 32 33 34 35
    factor (57)
        on left: 37 38 39 40 41 42 43
        on right: 36
    expression_statement (58)
        on left: 44 45
        on right: 53 55
    argument_list (59)
        on left: 46 47
        on right: 38
    arguments (60)
        on left: 48 49
        on right: 46 48
    func_definition (61)
        on left: 50 51
        on right: 5
    statement (62)
        on left: 52 53 54 55 56 57 58 59 60
        on right: 20 21 55 56 57 58


State 0

    0 $accept: • start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start            go to state 4
    program          go to state 5
    unit             go to state 6
    var_declaration  go to state 7
    type_specifier   go to state 8
    func_definition  go to state 9


State 1

    7 type_specifier: INT •

    $default  reduce using rule 7 (type_specifier)


State 2

    8 type_specifier: FLOAT •

    $default  reduce using rule 8 (type_specifier)


State 3

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 4

    0 $accept: start • $end

    $end  shift, and go to state 10


State 5

    1 start: program •
    2 program: program • unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit             go to state 11
    var_declaration  go to state 7
    type_specifier   go to state 8
    func_definition  go to state 9


State 6

    3 program: unit •

    $default  reduce using rule 3 (program)


State 7

    4 unit: var_declaration •

    $default  reduce using rule 4 (unit)


State 8

    6 var_declaration: type_specifier • declaration_list SEMICOLON
   50 func_definition: type_specifier • ID LPAREN parameter_list RPAREN compound_statement
   51                | type_specifier • ID LPAREN RPAREN compound_statement

    ID  shift, and go to state 12

    declaration_list  go to state 13


State 9

    5 unit: func_definition •

    $default  reduce using rule 5 (unit)


State 10

    0 $accept: start $end •

    $default  accept


State 11

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 12

   12 declaration_list: ID •
   13                 | ID • LTHIRD CONST_INT RTHIRD
   50 func_definition: type_specifier ID • LPAREN parameter_list RPAREN compound_statement
   51                | type_specifier ID • LPAREN RPAREN compound_statement

    LPAREN  shift, and go to state 14
    LTHIRD  shift, and go to state 15

    $default  reduce using rule 12 (declaration_list)


State 13

    6 var_declaration: type_specifier declaration_list • SEMICOLON
   10 declaration_list: declaration_list • COMMA ID
   11                 | declaration_list • COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 16
    COMMA      shift, and go to state 17


State 14

   50 func_definition: type_specifier ID LPAREN • parameter_list RPAREN compound_statement
   51                | type_specifier ID LPAREN • RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 18

    type_specifier  go to state 19
    parameter_list  go to state 20


State 15

   13 declaration_list: ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 21


State 16

    6 var_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 6 (var_declaration)


State 17

   10 declaration_list: declaration_list COMMA • ID
   11                 | declaration_list COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 22


State 18

   51 func_definition: type_specifier ID LPAREN RPAREN • compound_statement

    LCURL  shift, and go to state 23

    compound_statement  go to state 24


State 19

   16 parameter_list: type_specifier • ID
   17               | type_specifier •

    ID  shift, and go to state 25

    $default  reduce using rule 17 (parameter_list)


State 20

   14 parameter_list: parameter_list • COMMA type_specifier ID
   15               | parameter_list • COMMA type_specifier
   50 func_definition: type_specifier ID LPAREN parameter_list • RPAREN compound_statement

    RPAREN  shift, and go to state 26
    COMMA   shift, and go to state 27


State 21

   13 declaration_list: ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 28


State 22

   10 declaration_list: declaration_list COMMA ID •
   11                 | declaration_list COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 29

    $default  reduce using rule 10 (declaration_list)


State 23

   18 compound_statement: LCURL • statements RCURL
   19                   | LCURL • RCURL

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 33
    PRINTF       shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    RCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    var_declaration       go to state 43
    type_specifier        go to state 44
    compound_statement    go to state 45
    statements            go to state 46
    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 55
    statement             go to state 56


State 24

   51 func_definition: type_specifier ID LPAREN RPAREN compound_statement •

    $default  reduce using rule 51 (func_definition)


State 25

   16 parameter_list: type_specifier ID •

    $default  reduce using rule 16 (parameter_list)


State 26

   50 func_definition: type_specifier ID LPAREN parameter_list RPAREN • compound_statement

    LCURL  shift, and go to state 23

    compound_statement  go to state 57


State 27

   14 parameter_list: parameter_list COMMA • type_specifier ID
   15               | parameter_list COMMA • type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 58


State 28

   13 declaration_list: ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 13 (declaration_list)


State 29

   11 declaration_list: declaration_list COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 59


State 30

   56 statement: IF • LPAREN expression RPAREN statement
   57          | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 60


State 31

   55 statement: FOR • LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 61


State 32

   58 statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 62


State 33

   59 statement: RETURN • expression SEMICOLON

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 63
    variable           go to state 48
    logic_expression   go to state 49
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 34

   60 statement: PRINTF • LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 64


State 35

   34 unary_expression: ADDOP • unary_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable          go to state 65
    unary_expression  go to state 66
    factor            go to state 54


State 36

   35 unary_expression: NOT • unary_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable          go to state 65
    unary_expression  go to state 67
    factor            go to state 54


State 37

   39 factor: LPAREN • expression RPAREN

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 68
    variable           go to state 48
    logic_expression   go to state 49
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 38

   19 compound_statement: LCURL RCURL •

    $default  reduce using rule 19 (compound_statement)


State 39

   44 expression_statement: SEMICOLON •

    $default  reduce using rule 44 (expression_statement)


State 40

   24 variable: ID • LTHIRD expression RTHIRD
   25         | ID •
   38 factor: ID • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 69
    LTHIRD  shift, and go to state 70

    $default  reduce using rule 25 (variable)


State 41

   40 factor: CONST_INT •

    $default  reduce using rule 40 (factor)


State 42

   41 factor: CONST_FLOAT •

    $default  reduce using rule 41 (factor)


State 43

   52 statement: var_declaration •

    $default  reduce using rule 52 (statement)


State 44

    6 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 71

    declaration_list  go to state 13


State 45

   54 statement: compound_statement •

    $default  reduce using rule 54 (statement)


State 46

   18 compound_statement: LCURL statements • RCURL
   20 statements: statements • statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 33
    PRINTF       shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    RCURL        shift, and go to state 72
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    var_declaration       go to state 43
    type_specifier        go to state 44
    compound_statement    go to state 45
    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 55
    statement             go to state 73


State 47

   45 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 74


State 48

   23 expression: variable • ASSIGNOP logic_expression
   37 factor: variable •
   42       | variable • INCOP
   43       | variable • DECOP

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    ASSIGNOP  shift, and go to state 77

    $default  reduce using rule 37 (factor)


State 49

   22 expression: logic_expression •

    $default  reduce using rule 22 (expression)


State 50

   26 logic_expression: rel_expression •
   27                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 78

    $default  reduce using rule 26 (logic_expression)


State 51

   28 rel_expression: simple_expression •
   29               | simple_expression • RELOP simple_expression
   31 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 79
    RELOP  shift, and go to state 80

    $default  reduce using rule 28 (rel_expression)


State 52

   30 simple_expression: term •
   33 term: term • MULOP unary_expression

    MULOP  shift, and go to state 81

    $default  reduce using rule 30 (simple_expression)


State 53

   32 term: unary_expression •

    $default  reduce using rule 32 (term)


State 54

   36 unary_expression: factor •

    $default  reduce using rule 36 (unary_expression)


State 55

   53 statement: expression_statement •

    $default  reduce using rule 53 (statement)


State 56

   21 statements: statement •

    $default  reduce using rule 21 (statements)


State 57

   50 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement •

    $default  reduce using rule 50 (func_definition)


State 58

   14 parameter_list: parameter_list COMMA type_specifier • ID
   15               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 82

    $default  reduce using rule 15 (parameter_list)


State 59

   11 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 83


State 60

   56 statement: IF LPAREN • expression RPAREN statement
   57          | IF LPAREN • expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 84
    variable           go to state 48
    logic_expression   go to state 49
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 61

   55 statement: FOR LPAREN • expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 85


State 62

   58 statement: WHILE LPAREN • expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 86
    variable           go to state 48
    logic_expression   go to state 49
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 63

   59 statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 64

   60 statement: PRINTF LPAREN • ID RPAREN SEMICOLON

    ID  shift, and go to state 88


State 65

   37 factor: variable •
   42       | variable • INCOP
   43       | variable • DECOP

    INCOP  shift, and go to state 75
    DECOP  shift, and go to state 76

    $default  reduce using rule 37 (factor)


State 66

   34 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 34 (unary_expression)


State 67

   35 unary_expression: NOT unary_expression •

    $default  reduce using rule 35 (unary_expression)


State 68

   39 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 89


State 69

   38 factor: ID LPAREN • argument_list RPAREN

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    $default  reduce using rule 47 (argument_list)

    variable           go to state 65
    logic_expression   go to state 90
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54
    argument_list      go to state 91
    arguments          go to state 92


State 70

   24 variable: ID LTHIRD • expression RTHIRD

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 93
    variable           go to state 48
    logic_expression   go to state 49
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 71

   12 declaration_list: ID •
   13                 | ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 15

    $default  reduce using rule 12 (declaration_list)


State 72

   18 compound_statement: LCURL statements RCURL •

    $default  reduce using rule 18 (compound_statement)


State 73

   20 statements: statements statement •

    $default  reduce using rule 20 (statements)


State 74

   45 expression_statement: expression SEMICOLON •

    $default  reduce using rule 45 (expression_statement)


State 75

   42 factor: variable INCOP •

    $default  reduce using rule 42 (factor)


State 76

   43 factor: variable DECOP •

    $default  reduce using rule 43 (factor)


State 77

   23 expression: variable ASSIGNOP • logic_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable           go to state 65
    logic_expression   go to state 94
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 78

   27 logic_expression: rel_expression LOGICOP • rel_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable           go to state 65
    rel_expression     go to state 95
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 79

   31 simple_expression: simple_expression ADDOP • term

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable          go to state 65
    term              go to state 96
    unary_expression  go to state 53
    factor            go to state 54


State 80

   29 rel_expression: simple_expression RELOP • simple_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable           go to state 65
    simple_expression  go to state 97
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 81

   33 term: term MULOP • unary_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable          go to state 65
    unary_expression  go to state 98
    factor            go to state 54


State 82

   14 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 14 (parameter_list)


State 83

   11 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 11 (declaration_list)


State 84

   56 statement: IF LPAREN expression • RPAREN statement
   57          | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


State 85

   55 statement: FOR LPAREN expression_statement • expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 100


State 86

   58 statement: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 101


State 87

   59 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 59 (statement)


State 88

   60 statement: PRINTF LPAREN ID • RPAREN SEMICOLON

    RPAREN  shift, and go to state 102


State 89

   39 factor: LPAREN expression RPAREN •

    $default  reduce using rule 39 (factor)


State 90

   49 arguments: logic_expression •

    $default  reduce using rule 49 (arguments)


State 91

   38 factor: ID LPAREN argument_list • RPAREN

    RPAREN  shift, and go to state 103


State 92

   46 argument_list: arguments •
   48 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 104

    $default  reduce using rule 46 (argument_list)


State 93

   24 variable: ID LTHIRD expression • RTHIRD

    RTHIRD  shift, and go to state 105


State 94

   23 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 23 (expression)


State 95

   27 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 27 (logic_expression)


State 96

   31 simple_expression: simple_expression ADDOP term •
   33 term: term • MULOP unary_expression

    MULOP  shift, and go to state 81

    $default  reduce using rule 31 (simple_expression)


State 97

   29 rel_expression: simple_expression RELOP simple_expression •
   31 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 79

    $default  reduce using rule 29 (rel_expression)


State 98

   33 term: term MULOP unary_expression •

    $default  reduce using rule 33 (term)


State 99

   56 statement: IF LPAREN expression RPAREN • statement
   57          | IF LPAREN expression RPAREN • statement ELSE statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 33
    PRINTF       shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    var_declaration       go to state 43
    type_specifier        go to state 44
    compound_statement    go to state 45
    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 55
    statement             go to state 106


State 100

   55 statement: FOR LPAREN expression_statement expression_statement • expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 107
    variable           go to state 48
    logic_expression   go to state 49
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 101

   58 statement: WHILE LPAREN expression RPAREN • statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 33
    PRINTF       shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    var_declaration       go to state 43
    type_specifier        go to state 44
    compound_statement    go to state 45
    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 55
    statement             go to state 108


State 102

   60 statement: PRINTF LPAREN ID RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 103

   38 factor: ID LPAREN argument_list RPAREN •

    $default  reduce using rule 38 (factor)


State 104

   48 arguments: arguments COMMA • logic_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    variable           go to state 65
    logic_expression   go to state 110
    rel_expression     go to state 50
    simple_expression  go to state 51
    term               go to state 52
    unary_expression   go to state 53
    factor             go to state 54


State 105

   24 variable: ID LTHIRD expression RTHIRD •

    $default  reduce using rule 24 (variable)


State 106

   56 statement: IF LPAREN expression RPAREN statement •
   57          | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 111

    ELSE      [reduce using rule 56 (statement)]
    $default  reduce using rule 56 (statement)


State 107

   55 statement: FOR LPAREN expression_statement expression_statement expression • RPAREN statement

    RPAREN  shift, and go to state 112


State 108

   58 statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 58 (statement)


State 109

   60 statement: PRINTF LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 60 (statement)


State 110

   48 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 48 (arguments)


State 111

   57 statement: IF LPAREN expression RPAREN statement ELSE • statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 33
    PRINTF       shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    var_declaration       go to state 43
    type_specifier        go to state 44
    compound_statement    go to state 45
    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 55
    statement             go to state 113


State 112

   55 statement: FOR LPAREN expression_statement expression_statement expression RPAREN • statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 33
    PRINTF       shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    var_declaration       go to state 43
    type_specifier        go to state 44
    compound_statement    go to state 45
    expression            go to state 47
    variable              go to state 48
    logic_expression      go to state 49
    rel_expression        go to state 50
    simple_expression     go to state 51
    term                  go to state 52
    unary_expression      go to state 53
    factor                go to state 54
    expression_statement  go to state 55
    statement             go to state 114


State 113

   57 statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 57 (statement)


State 114

   55 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement •

    $default  reduce using rule 55 (statement)
